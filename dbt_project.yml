name: "dbt_pov_model_cost_calculator"
version: "0.1.0"
config-version: 2

# This setting configures which "profile" dbt uses for this project.
profile: "dbt_pov_model_cost_calculator"

# These configurations specify where dbt should look for different types of files.
# The `model-paths` config, for example, states that models in this project can be
# found in the "models/" directory. You probably won't need to change these!
model-paths: ["models"]
analysis-paths: ["analysis"]
test-paths: ["tests"]
seed-paths: ["seeds"]
macro-paths: ["macros"]
snapshot-paths: ["snapshots"]
models:
  +dbt_pov_model_cost_calculator:
    +enabled: "{{ env_var('DBT_ENABLE_MBR_MODELS', true) | as_bool }}"

target-path: "target" # directory which will store compiled SQL files
clean-targets: # directories to be removed by `dbt clean`
  - "target"
  - "dbt_packages"

# Configuring models
# Full documentation: https://docs.getdbt.com/docs/configuring-models

# In this example config, we tell dbt to build all models in the example/
# directory as views. These settings can be overridden in the individual model files
# using the `{{ config(...) }}` macro
# models:
# +dbt_model_build_logger:
# Configure the on-run-start hook to create the tracking table
# Controlled by DBT_ENABLE_PRE_HOOKS environment variable
on-run-start:
  - "{% if env_var('DBT_ENABLE_MBR_PRE_HOOKS', 'true') | as_bool %}{{ create_dbt_project_models_table() }}{% endif %}"

# Configure the on-run-end hook to log model executions
# Controlled by DBT_ENABLE_POST_HOOKS environment variable
on-run-end:
  - "{% if env_var('DBT_ENABLE_MBR_MODEL_POST_HOOK', 'true') | as_bool %}{{ record_dbt_project_models() }}{% endif %}"
  - "{% if env_var('DBT_ENABLE_MBR_RUN_POST_HOOK', 'true') | as_bool %}{{ record_dbt_run_data() }}{% endif %}"

# Configure query comments to include comprehensive metadata
query-comment: "{{ dbt_pov_model_cost_calculator.query_comment(node) }}"

# Variables for the plugin
vars:
  # Schema where the tracking table will be created
  artifact_schema: "{{ target.schema }}"
  # Table name for tracking model executions
  artifact_table: "dbt_model_executions"
  # Batch size for inserting model execution records (default: 500)
  batch_size: 500
  # Start date for query monitoring (default: 30 days ago)
  model_monitor_start_date: "{{ (modules.datetime.datetime.now() - modules.datetime.timedelta(days=30)).strftime('%Y-%m-%d') }}"

  # System table overrides (optional - defaults to standard system tables)
  bigquery_jobs_table: "{{ target.project }}.region-us.INFORMATION_SCHEMA.JOBS"
  databricks_query_history_table: "system.query.history"
  databricks_billing_usage_table: "system.billing.usage"
  databricks_billing_prices_table: "system.billing.list_prices"
  snowflake_query_history_table: "snowflake.account_usage.query_history"
  snowflake_query_attribution_table: "snowflake.account_usage.query_attribution_history"
  redshift_provisioned_query_history_table: "SYS_QUERY_HISTORY"
  redshift_serverless_query_history_table: "SYS_QUERY_HISTORY"
  redshift_serverless_usage_table: "SYS_SERVERLESS_USAGE"