name: Integration Tests

on:
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  integration-tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        adapter: [snowflake, databricks, bigquery]
      fail-fast: false
    
    env:
      # Snowflake Environment Variables
      SNOWFLAKE_ACCOUNT: ${{ secrets.SNOWFLAKE_ACCOUNT }}
      SNOWFLAKE_USER: ${{ secrets.SNOWFLAKE_USER }}
      DBT_ENV_SECRET_SNOWFLAKE_PASSWORD: ${{ secrets.SNOWFLAKE_PASSWORD }}
      SNOWFLAKE_ROLE: ${{ secrets.SNOWFLAKE_ROLE }}
      SNOWFLAKE_DATABASE: ${{ secrets.SNOWFLAKE_DATABASE }}
      SNOWFLAKE_WAREHOUSE: ${{ secrets.SNOWFLAKE_WAREHOUSE }}
      SNOWFLAKE_SCHEMA: ${{ secrets.SNOWFLAKE_SCHEMA }}
      
      # Databricks Environment Variables
      DATABRICKS_HOST: ${{ secrets.DATABRICKS_HOST }}
      DATABRICKS_HTTP_PATH: ${{ secrets.DATABRICKS_HTTP_PATH }}
      DBT_ENV_SECRET_DATABRICKS_TOKEN: ${{ secrets.DATABRICKS_TOKEN }}
      DATABRICKS_CATALOG: ${{ secrets.DATABRICKS_CATALOG }}
      DATABRICKS_SCHEMA: ${{ secrets.DATABRICKS_SCHEMA }}
      
      # BigQuery Environment Variables
      BIGQUERY_PROJECT: ${{ secrets.BIGQUERY_PROJECT }}
      BIGQUERY_DATASET: ${{ secrets.BIGQUERY_DATASET }}
      BIGQUERY_KEYFILE_TYPE: ${{ secrets.BIGQUERY_KEYFILE_TYPE }}
      DBT_ENV_SECRET_BIGQUERY_PRIVATE_KEY_ID: ${{ secrets.BIGQUERY_PRIVATE_KEY_ID }}
      DBT_ENV_SECRET_BIGQUERY_PRIVATE_KEY: ${{ secrets.BIGQUERY_PRIVATE_KEY }}
      BIGQUERY_CLIENT_EMAIL: ${{ secrets.BIGQUERY_CLIENT_EMAIL }}
      BIGQUERY_CLIENT_ID: ${{ secrets.BIGQUERY_CLIENT_ID }}
      BIGQUERY_CLIENT_X509_CERT_URL: ${{ secrets.BIGQUERY_CLIENT_X509_CERT_URL }}
      BIGQUERY_LOCATION: ${{ secrets.BIGQUERY_LOCATION }}
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dbt and Adapters
        run: |
          pip install dbt-core
          pip install dbt-${{ matrix.adapter }}


      - name: Install Dependencies
        run: |
          dbt deps --profiles-dir integration_tests --project-dir integration_tests/test_project

      # - name: Debug Connection
      #   run: |
      #     dbt debug --target ${{ matrix.adapter }} --profiles-dir integration_tests --project-dir integration_tests/test_project

      - name: Run dbt Compile
        run: |
          dbt compile --target ${{ matrix.adapter }} --profiles-dir integration_tests --project-dir integration_tests/test_project

      - name: Run dbt Run
        run: |
          dbt run --target ${{ matrix.adapter }} --select tag:integration_test --profiles-dir integration_tests --project-dir integration_tests/test_project

      - name: Verify Artifact Table
        run: |
          dbt run-operation query --args '{sql: "select count(*) as execution_count from {{ var(\"artifact_table\", \"dbt_model_executions\") }} where model_name in (\"test_basic_model\", \"test_view_model\", \"test_incremental_model\") and status = \"success\""}' --target ${{ matrix.adapter }} --profiles-dir integration_tests --project-dir integration_tests/test_project

      - name: Clean Up
        if: always()
        run: |
          dbt run-operation query --args '{sql: "drop table if exists {{ var(\"artifact_table\", \"dbt_model_executions\") }}"}' --target ${{ matrix.adapter }} --profiles-dir integration_tests --project-dir integration_tests/test_project || true
          dbt run-operation query --args '{sql: "drop table if exists test_basic_model"}' --target ${{ matrix.adapter }} --profiles-dir integration_tests --project-dir integration_tests/test_project || true
          dbt run-operation query --args '{sql: "drop view if exists test_view_model"}' --target ${{ matrix.adapter }} --profiles-dir integration_tests --project-dir integration_tests/test_project || true
          dbt run-operation query --args '{sql: "drop table if exists test_incremental_model"}' --target ${{ matrix.adapter }} --profiles-dir integration_tests --project-dir integration_tests/test_project || true
